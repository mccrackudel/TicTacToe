{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAgBE,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJI,E,+CAQjB,SAAYC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACZR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,0BAI3B,SAAaC,GAAI,IAAD,OACd,OACE,cAACX,EAAD,CACEI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKa,YAAYL,Q,oBAKtC,WACI,IACAM,EADMC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQ5C,OALAU,EADEC,EACO,WAAaA,EAEb,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAIrD,gCACE,qBAAKR,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACGU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,MAEjE,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,MAEjE,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAAIP,KAAKO,aAAa,GAAIP,KAAKO,aAAa,a,GAjDrDC,IAAMC,WAwDpBC,E,4JACJ,WACE,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSkB,IAAMC,WAgBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAITG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.06083ef7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/* class Square extends React.Component {\r\n    render() {\r\n      return (\r\n        <button\r\n          className=\"square\"\r\n          onClick={() => this.props.onClick()}\r\n        >\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  } */\r\n  function Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          squares: Array(9).fill(null),\r\n          xIsNext: true,\r\n        };\r\n      }\r\n\r\n      handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n          return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n          squares: squares,\r\n          xIsNext: !this.state.xIsNext,\r\n        });\r\n      }\r\n\r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.state.squares[i]}\r\n          onClick={() => this.handleClick(i)}\r\n        />\r\n      );\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  // ========================================\r\n\r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}